[{"C:\\Web Design\\Blog\\src\\index.js":"1","C:\\Web Design\\Blog\\src\\reportWebVitals.js":"2","C:\\Web Design\\Blog\\src\\App.js":"3","C:\\Web Design\\Blog\\src\\components\\AllPosts.js":"4","C:\\Web Design\\Blog\\src\\components\\OnePost.js":"5","C:\\Web Design\\Blog\\src\\client.js":"6","C:\\Web Design\\Blog\\src\\components\\elements\\Header.js":"7","C:\\Web Design\\Blog\\src\\components\\elements\\Nav.js":"8","C:\\Web Design\\Blog\\src\\components\\SortPosts.js":"9","C:\\Web Design\\Blog\\src\\components\\elements\\Footer.js":"10"},{"size":535,"mtime":1612220665497,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1114,"mtime":1612660382357,"results":"14","hashOfConfig":"12"},{"size":2859,"mtime":1612987472009,"results":"15","hashOfConfig":"12"},{"size":5072,"mtime":1612910099962,"results":"16","hashOfConfig":"12"},{"size":180,"mtime":1611946906109,"results":"17","hashOfConfig":"12"},{"size":314,"mtime":1612910098534,"results":"18","hashOfConfig":"12"},{"size":1210,"mtime":1612989201307,"results":"19","hashOfConfig":"12"},{"size":2922,"mtime":1612987381642,"results":"20","hashOfConfig":"12"},{"size":1682,"mtime":1612986924818,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1237r0n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Web Design\\Blog\\src\\index.js",[],["46","47"],"C:\\Web Design\\Blog\\src\\reportWebVitals.js",[],"C:\\Web Design\\Blog\\src\\App.js",["48"],"// NOt needed\n// import './App.css';\n\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport AllPosts from \"./components/AllPosts.js\"\nimport OnePost from \"./components/OnePost.js\"\nimport SortPosts from \"./components/SortPosts.js\"\nimport Nav from \"./components/elements/Nav.js\"\nimport Header from \"./components/elements/Header.js\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"./components/elements/Footer\"\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route component={Header} />\n        <Route component={Nav} />\n        {/* Link to home */}\n        <Route component={AllPosts} path=\"/\" exact />\n\n        {/* Find the 'slug' of the blog post that we will declare in our sanity studio, which will then be the link/url*/}\n        <Route component={OnePost} exact path=\"/:slug\" />\n\n        {/* <Route component={SortPosts} path=\"/:slug\" /> */}\n        <Route path='/tags/:slug' exact component={(props) => <SortPosts {...props} key={window.location.pathname} />} />\n\n        <Route component={Footer} />\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Web Design\\Blog\\src\\components\\AllPosts.js",["49","50"],"C:\\Web Design\\Blog\\src\\components\\OnePost.js",["51","52","53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\"\r\nimport sanityClient from \"../client.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport Header from \"./elements/Header\";\r\nimport Nav from \"./elements/Nav\";\r\nimport FadeIn from \"react-fade-in\"\r\n\r\n\r\n// sanity package to help with many images\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\n\r\nconst builder = imageUrlBuilder(sanityClient);\r\nfunction urlFor(source) {\r\n    return builder.image(source);\r\n}\r\n\r\n// Youtube ID Finder\r\nfunction youtubeParser(url) {\r\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n    var match = url.match(regExp);\r\n    return (match && match[7].length == 11) ? match[7] : false;\r\n}\r\n\r\nexport default function OnePost() {\r\n    // set state\r\n    const [postData, setPostData] = useState(null);\r\n    const { slug } = useParams();\r\n\r\n\r\n    // use useeffect to grab data from our sanity client\r\n    useEffect(() => {\r\n        sanityClient.fetch(\r\n            // All slugs.current that is equal to the slug we are clicking on $.\r\n            //AKA find jusut the slug we are clicking on\r\n            `*[slug.current == $slug]{\r\n                title,\r\n                slug,\r\n                mainImage{\r\n                    asset->{\r\n                        _id,\r\n                        url\r\n                    }\r\n                },\r\n                body,\r\n                description,\r\n                youtube,\r\n                ingredients,\r\n                prepTime,\r\n                cookTime,\r\n                servings,\r\n                ingredients,\r\n                type,\r\n                longerDesc\r\n            }`,\r\n            // indicate we are looking at a slug\r\n            { slug }\r\n        )\r\n            .then((data) => setPostData(data[0]))\r\n            .catch(console.error)\r\n    }, [slug]);\r\n\r\n\r\n\r\n    if (!postData) return (\r\n        <>\r\n            {/* <Link to={'/'}><button>‚Äπ Back to all recipes</button></Link> */}\r\n            {/* <div className=\"loading-text\">Setting the table...</div> */}\r\n            <div className=\"loading\">üç¥</div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n\r\n        <FadeIn transitionDuration=\"1500\" wrapperTag=\"main\" className=\"recipe-page main\">\r\n            <Link to={'/'} className=\"btn back-btn\">‚Äπ Back to all recipes</Link>\r\n            <h2 className=\"recipe-page-title\">{postData.title}</h2>\r\n            <blockquote><span>‚Äú</span>{postData.description}<span>‚Äù</span></blockquote>\r\n\r\n\r\n            <div className=\"recipe-page-details\">\r\n                {postData.mainImage &&\r\n                    <img src={urlFor(postData.mainImage).width(500).url()} alt=\"main image of post\" className=\"recipe-page-img\" />\r\n                }\r\n                <div className=\"recipe-page-details__text\">\r\n                    <span><strong>Prep:</strong> {postData.prepTime}</span>\r\n                    <span><strong>Cook:</strong> {postData.cookTime}</span>\r\n                    <span><strong>Servings:</strong> {postData.servings}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                {/* Youtube video */}\r\n                {postData.youtube && <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${youtubeParser(postData.youtube)}`} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>}\r\n                {/* {postData.ingredients && <div>{postData.ingredients}</div>} */}\r\n\r\n                {postData.longerDesc && <div className=\"recipe-page-description\"><BlockContent\r\n                    blocks={postData.longerDesc}\r\n                    projectId={sanityClient.clientConfig.projectId}\r\n                    dataset={sanityClient.clientConfig.dataset}\r\n                /></div>}\r\n\r\n\r\n                {/* Ingredients are rendered as <p> */}\r\n                <div className=\"ingredients-list\">\r\n                    <h2 className=\"ingredients-list-header recipe-header\">Ingredients</h2>\r\n                    <BlockContent\r\n                        blocks={postData.ingredients}\r\n                        projectId={sanityClient.clientConfig.projectId}\r\n                        dataset={sanityClient.clientConfig.dataset}\r\n                    />\r\n                </div>\r\n                <div className=\"steps\">\r\n                    <h2 className=\"steps-header recipe-header\">Steps</h2>\r\n                    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1MjwG7YzMFY\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n                    <BlockContent\r\n                        blocks={postData.body}\r\n                        projectId={sanityClient.clientConfig.projectId}\r\n                        dataset={sanityClient.clientConfig.dataset}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </FadeIn>\r\n    )\r\n}","C:\\Web Design\\Blog\\src\\client.js",["56"],"import sanityClient from \"@sanity/client\"\r\nimport { defaultCipherList } from \"constants\"\r\n\r\nexport default sanityClient({\r\n    projectId: \"1lhhpzey\",\r\n    dataset: \"production\"\r\n})","C:\\Web Design\\Blog\\src\\components\\elements\\Header.js",[],"C:\\Web Design\\Blog\\src\\components\\elements\\Nav.js",[],"C:\\Web Design\\Blog\\src\\components\\SortPosts.js",["57","58","59"],"C:\\Web Design\\Blog\\src\\components\\elements\\Footer.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":11},{"ruleId":"64","severity":1,"message":"68","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":11},{"ruleId":"70","severity":1,"message":"71","line":23,"column":38,"nodeType":"72","messageId":"73","endLine":23,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":84,"column":21,"nodeType":"76","endLine":84,"endColumn":131},{"ruleId":"77","severity":1,"message":"78","line":96,"column":38,"nodeType":"76","endLine":96,"endColumn":273},{"ruleId":"64","severity":1,"message":"79","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":27},{"ruleId":"64","severity":1,"message":"80","line":11,"column":9,"nodeType":"66","messageId":"67","endLine":11,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":36,"column":11,"nodeType":"83","endLine":36,"endColumn":13,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"75","line":64,"column":33,"nodeType":"76","endLine":67,"endColumn":62},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Nav' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'defaultCipherList' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [slug]",{"range":"90","text":"91"},[1035,1037],"[slug]"]